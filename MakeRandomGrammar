import java.util.*;

 * 

 * Symbol.start("_Greeting").makeTree(g);
 *
 *        _Greeting
 *         /  |   \
 *        /   |    \
 *      _HI  name  _Bye
 *       |           | \
 *       |           |  \
 *      hello       see ya
 *
 * After calling printTree() we'll have
 *
 * hello name see ya
 *
 */

public abstract class Symbol
{

    public abstract void makeTree(Grammar g);
    public abstract void printTree();

    public static Symbol start(String s) throws Exception
    {
        return new nonterminal(s);
        //throw new Exception("Error: start not implemented");
    }
}

class terminal extends Symbol{
    private String val;

    terminal(String s){
        this.val = s;
    }

    @Override
    public void makeTree(Grammar g) {
    }

    @Override
    public void printTree(){
        System.out.print(this.val + " ");
    }
}

class nonterminal extends Symbol{
    private String val;
    List<Symbol> list = new LinkedList<Symbol>();

    nonterminal(String s){
        this.val = s;
    }
    @Override
    public void makeTree(Grammar g) {
        List<String> ss = g.getRandom(this.val);
        for(String s : ss){
            if(s.chartAt(0) == "_"){
                list.add(new nonterminal(s));
            }else{      
                list.add(new terminal(s));
            }
        }
    }

    @Override
    public void printTree(){
        for(int i = 0; i < myList.size(); i++){
            Symbol newNode = myList.get(i);
            newNode.printTree();
        }
    }
}



