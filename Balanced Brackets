import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
   
    
    public static boolean isBalanced(String expression) {
        Stack <String> stack = new Stack<String>();
        String valueLeft = "([{";
        String valueRight = ")]}";
        //char [] symbolsLeft  = valueLeft.toCharArray();
        //char [] symbolsRight = valueRight.toCharArray();
    
        char [] expressionArray = expression.toCharArray();
        
        int length = expressionArray.length;
        
        for(int i = 0; i < length; i++){
            String currentChar = Character.toString(expressionArray[i]);
            if(valueLeft.contains(currentChar)){
                stack.push(currentChar);
            }else{
                if(!stack.empty()){
                    String stringFromStack = (String) stack.pop();
                    if(valueLeft.indexOf(stringFromStack) != valueRight.indexOf(currentChar)){
                        return false;
                    }
                }else{
                    return false;
                }
            }
        }
       
        return true;
    }
  
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for (int a0 = 0; a0 < t; a0++) {
            String expression = in.next();
            System.out.println( (isBalanced(expression)) ? "YES" : "NO" );
        }
    }
}
